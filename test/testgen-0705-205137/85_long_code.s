	.cpu cortex-a7
	.arch armv7ve
	.fpu vfpv4

	.text

	.global bubblesort
bubblesort:
.BLOCK_0:
	SUB sp, sp, #16
	MOV VR_4, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	STR VR_4, [VR_3]
	MOV VR_5, #0
	STR VR_5, [VR_2]
	B .BLOCK_1
.BLOCK_1:
	LDR VR_6, [VR_2]
	MOVW VR_8, :lower16:n
	MOVT VR_8, :upper16:n
	LDR VR_7, [VR_8]
	SUB VR_9, VR_7, #1
	CMP VR_6, VR_9
	BLT .BLOCK_2
	BGE .BLOCK_3
.BLOCK_2:
	MOV VR_10, #0
	STR VR_10, [VR_1]
	B .BLOCK_4
.BLOCK_3:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr
.BLOCK_4:
	LDR VR_11, [VR_1]
	MOVW VR_13, :lower16:n
	MOVT VR_13, :upper16:n
	LDR VR_12, [VR_13]
	LDR VR_14, [VR_2]
	SUB VR_15, VR_12, VR_14
	SUB VR_16, VR_15, #1
	CMP VR_11, VR_16
	BLT .BLOCK_5
	BGE .BLOCK_6
.BLOCK_5:
	B .BLOCK_7
.BLOCK_6:
	LDR VR_17, [VR_2]
	ADD VR_18, VR_17, #1
	STR VR_18, [VR_2]
	B .BLOCK_1
.BLOCK_7:
	LDR VR_19, [VR_3]
	LDR VR_20, [VR_1]
	ADD VR_21, VR_19, VR_20, LSL #2
	LDR VR_22, [VR_21]
	LDR VR_23, [VR_3]
	LDR VR_24, [VR_1]
	ADD VR_25, VR_24, #1
	ADD VR_26, VR_23, VR_25, LSL #2
	LDR VR_27, [VR_26]
	CMP VR_22, VR_27
	BGT .BLOCK_9
	BLE .BLOCK_8
.BLOCK_8:
	LDR VR_28, [VR_1]
	ADD VR_29, VR_28, #1
	STR VR_29, [VR_1]
	B .BLOCK_4
.BLOCK_9:
	LDR VR_30, [VR_3]
	LDR VR_31, [VR_1]
	ADD VR_32, VR_31, #1
	ADD VR_33, VR_30, VR_32, LSL #2
	LDR VR_34, [VR_33]
	STR VR_34, [VR_0]
	LDR VR_35, [VR_3]
	LDR VR_36, [VR_1]
	ADD VR_37, VR_36, #1
	ADD VR_38, VR_35, VR_37, LSL #2
	LDR VR_39, [VR_3]
	LDR VR_40, [VR_1]
	ADD VR_41, VR_39, VR_40, LSL #2
	LDR VR_42, [VR_41]
	STR VR_42, [VR_38]
	LDR VR_43, [VR_3]
	LDR VR_44, [VR_1]
	ADD VR_45, VR_43, VR_44, LSL #2
	LDR VR_46, [VR_0]
	STR VR_46, [VR_45]
	B .BLOCK_8
.BLOCK_10:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr


	.global insertsort
insertsort:
.BLOCK_11:
	SUB sp, sp, #16
	MOV VR_4, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	STR VR_4, [VR_3]
	MOV VR_5, #1
	STR VR_5, [VR_2]
	B .BLOCK_12
.BLOCK_12:
	LDR VR_6, [VR_2]
	MOVW VR_8, :lower16:n
	MOVT VR_8, :upper16:n
	LDR VR_7, [VR_8]
	CMP VR_6, VR_7
	BLT .BLOCK_13
	BGE .BLOCK_14
.BLOCK_13:
	LDR VR_9, [VR_3]
	LDR VR_10, [VR_2]
	ADD VR_11, VR_9, VR_10, LSL #2
	LDR VR_12, [VR_11]
	STR VR_12, [VR_1]
	LDR VR_13, [VR_2]
	SUB VR_14, VR_13, #1
	STR VR_14, [VR_0]
	B .BLOCK_15
.BLOCK_14:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr
.BLOCK_15:
	LDR VR_15, [VR_0]
	MOV VR_17, #0
	SUB VR_16, VR_17, #1
	CMP VR_15, VR_16
	BGT .BLOCK_18
	BLE .BLOCK_17
.BLOCK_16:
	LDR VR_18, [VR_3]
	LDR VR_19, [VR_0]
	ADD VR_20, VR_19, #1
	ADD VR_21, VR_18, VR_20, LSL #2
	LDR VR_22, [VR_3]
	LDR VR_23, [VR_0]
	ADD VR_24, VR_22, VR_23, LSL #2
	LDR VR_25, [VR_24]
	STR VR_25, [VR_21]
	LDR VR_26, [VR_0]
	SUB VR_27, VR_26, #1
	STR VR_27, [VR_0]
	B .BLOCK_15
.BLOCK_17:
	LDR VR_28, [VR_3]
	LDR VR_29, [VR_0]
	ADD VR_30, VR_29, #1
	ADD VR_31, VR_28, VR_30, LSL #2
	LDR VR_32, [VR_1]
	STR VR_32, [VR_31]
	LDR VR_33, [VR_2]
	ADD VR_34, VR_33, #1
	STR VR_34, [VR_2]
	B .BLOCK_12
.BLOCK_18:
	LDR VR_35, [VR_1]
	LDR VR_36, [VR_3]
	LDR VR_37, [VR_0]
	ADD VR_38, VR_36, VR_37, LSL #2
	LDR VR_39, [VR_38]
	CMP VR_35, VR_39
	BLT .BLOCK_16
	BGE .BLOCK_17
.BLOCK_19:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr


	.global QuickSort
QuickSort:
.BLOCK_20:
	SUB sp, sp, #28
	MOV VR_9, r2
	MOV VR_8, r1
	MOV VR_7, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	ADD VR_4, sp, #16
	ADD VR_5, sp, #20
	ADD VR_6, sp, #24
	STR VR_7, [VR_6]
	STR VR_8, [VR_5]
	STR VR_9, [VR_4]
	B .BLOCK_21
.BLOCK_21:
	LDR VR_10, [VR_5]
	LDR VR_11, [VR_4]
	CMP VR_10, VR_11
	BLT .BLOCK_23
	BGE .BLOCK_22
.BLOCK_22:
	MOV r0, #0
	ADD sp, sp, #28
	POP {pc}
.BLOCK_23:
	LDR VR_12, [VR_5]
	STR VR_12, [VR_3]
	LDR VR_13, [VR_4]
	STR VR_13, [VR_2]
	LDR VR_14, [VR_6]
	LDR VR_15, [VR_5]
	ADD VR_16, VR_14, VR_15, LSL #2
	LDR VR_17, [VR_16]
	STR VR_17, [VR_1]
	B .BLOCK_24
.BLOCK_24:
	LDR VR_18, [VR_3]
	LDR VR_19, [VR_2]
	CMP VR_18, VR_19
	BLT .BLOCK_25
	BGE .BLOCK_26
.BLOCK_25:
	B .BLOCK_27
.BLOCK_26:
	LDR VR_20, [VR_6]
	LDR VR_21, [VR_3]
	ADD VR_22, VR_20, VR_21, LSL #2
	LDR VR_23, [VR_1]
	STR VR_23, [VR_22]
	LDR VR_24, [VR_3]
	SUB VR_25, VR_24, #1
	STR VR_25, [VR_0]
	LDR VR_26, [VR_6]
	LDR VR_27, [VR_5]
	LDR VR_28, [VR_0]
	MOV r2, VR_28
	MOV r1, VR_27
	MOV r0, VR_26
	BL QuickSort
	MOV VR_29, r0
	STR VR_29, [VR_0]
	LDR VR_30, [VR_3]
	ADD VR_31, VR_30, #1
	STR VR_31, [VR_0]
	LDR VR_32, [VR_6]
	LDR VR_33, [VR_0]
	LDR VR_34, [VR_4]
	MOV r2, VR_34
	MOV r1, VR_33
	MOV r0, VR_32
	BL QuickSort
	MOV VR_35, r0
	STR VR_35, [VR_0]
	B .BLOCK_22
.BLOCK_27:
	LDR VR_36, [VR_3]
	LDR VR_37, [VR_2]
	CMP VR_36, VR_37
	BLT .BLOCK_30
	BGE .BLOCK_29
.BLOCK_28:
	LDR VR_38, [VR_2]
	SUB VR_39, VR_38, #1
	STR VR_39, [VR_2]
	B .BLOCK_27
.BLOCK_29:
	B .BLOCK_31
.BLOCK_30:
	LDR VR_40, [VR_6]
	LDR VR_41, [VR_2]
	ADD VR_42, VR_40, VR_41, LSL #2
	LDR VR_43, [VR_42]
	LDR VR_44, [VR_1]
	SUB VR_45, VR_44, #1
	CMP VR_43, VR_45
	BGT .BLOCK_28
	BLE .BLOCK_29
.BLOCK_31:
	LDR VR_46, [VR_3]
	LDR VR_47, [VR_2]
	CMP VR_46, VR_47
	BLT .BLOCK_33
	BGE .BLOCK_32
.BLOCK_32:
	B .BLOCK_34
.BLOCK_33:
	LDR VR_48, [VR_6]
	LDR VR_49, [VR_3]
	ADD VR_50, VR_48, VR_49, LSL #2
	LDR VR_51, [VR_6]
	LDR VR_52, [VR_2]
	ADD VR_53, VR_51, VR_52, LSL #2
	LDR VR_54, [VR_53]
	STR VR_54, [VR_50]
	LDR VR_55, [VR_3]
	ADD VR_56, VR_55, #1
	STR VR_56, [VR_3]
	B .BLOCK_32
.BLOCK_34:
	LDR VR_57, [VR_3]
	LDR VR_58, [VR_2]
	CMP VR_57, VR_58
	BLT .BLOCK_37
	BGE .BLOCK_36
.BLOCK_35:
	LDR VR_59, [VR_3]
	ADD VR_60, VR_59, #1
	STR VR_60, [VR_3]
	B .BLOCK_34
.BLOCK_36:
	B .BLOCK_38
.BLOCK_37:
	LDR VR_61, [VR_6]
	LDR VR_62, [VR_3]
	ADD VR_63, VR_61, VR_62, LSL #2
	LDR VR_64, [VR_63]
	LDR VR_65, [VR_1]
	CMP VR_64, VR_65
	BLT .BLOCK_35
	BGE .BLOCK_36
.BLOCK_38:
	LDR VR_66, [VR_3]
	LDR VR_67, [VR_2]
	CMP VR_66, VR_67
	BLT .BLOCK_40
	BGE .BLOCK_39
.BLOCK_39:
	B .BLOCK_24
.BLOCK_40:
	LDR VR_68, [VR_6]
	LDR VR_69, [VR_2]
	ADD VR_70, VR_68, VR_69, LSL #2
	LDR VR_71, [VR_6]
	LDR VR_72, [VR_3]
	ADD VR_73, VR_71, VR_72, LSL #2
	LDR VR_74, [VR_73]
	STR VR_74, [VR_70]
	LDR VR_75, [VR_2]
	SUB VR_76, VR_75, #1
	STR VR_76, [VR_2]
	B .BLOCK_39
.BLOCK_41:
	MOV r0, #0
	ADD sp, sp, #28
	POP {pc}


	.global getMid
getMid:
.BLOCK_42:
	SUB sp, sp, #8
	MOV VR_2, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	STR VR_2, [VR_1]
	B .BLOCK_43
.BLOCK_43:
	MOVW VR_4, :lower16:n
	MOVT VR_4, :upper16:n
	LDR VR_3, [VR_4]
	MOV VR_6, VR_3, ASR #0
	ADD VR_6, VR_3, VR_6, LSR #31
	MOV VR_5, VR_6, ASR #1
	MOV VR_7, VR_5, LSL #1
	SUB VR_8, VR_3, VR_7
	CMP VR_8, #0
	BEQ .BLOCK_45
	BNE .BLOCK_47
.BLOCK_44:
	MOV r0, #0
	ADD sp, sp, #8
	BX lr
.BLOCK_45:
	MOVW VR_10, :lower16:n
	MOVT VR_10, :upper16:n
	LDR VR_9, [VR_10]
	MOV VR_12, VR_9, ASR #0
	ADD VR_12, VR_9, VR_12, LSR #31
	MOV VR_11, VR_12, ASR #1
	STR VR_11, [VR_0]
	LDR VR_13, [VR_1]
	LDR VR_14, [VR_0]
	ADD VR_15, VR_13, VR_14, LSL #2
	LDR VR_16, [VR_15]
	LDR VR_17, [VR_1]
	LDR VR_18, [VR_0]
	SUB VR_19, VR_18, #1
	ADD VR_20, VR_17, VR_19, LSL #2
	LDR VR_21, [VR_20]
	ADD VR_22, VR_16, VR_21
	MOV VR_24, VR_22, ASR #0
	ADD VR_24, VR_22, VR_24, LSR #31
	MOV VR_23, VR_24, ASR #1
	MOV r0, VR_23
	ADD sp, sp, #8
	BX lr
.BLOCK_46:
	B .BLOCK_44
.BLOCK_47:
	MOVW VR_26, :lower16:n
	MOVT VR_26, :upper16:n
	LDR VR_25, [VR_26]
	MOV VR_28, VR_25, ASR #0
	ADD VR_28, VR_25, VR_28, LSR #31
	MOV VR_27, VR_28, ASR #1
	STR VR_27, [VR_0]
	LDR VR_29, [VR_1]
	LDR VR_30, [VR_0]
	ADD VR_31, VR_29, VR_30, LSL #2
	LDR VR_32, [VR_31]
	MOV r0, VR_32
	ADD sp, sp, #8
	BX lr
.BLOCK_48:
	B .BLOCK_44


	.global getMost
getMost:
.BLOCK_49:
	MOVW VR_40, #4020
	SUB sp, sp, VR_40
	MOV VR_6, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	ADD VR_4, sp, #16
	ADD VR_5, sp, #4016
	STR VR_6, [VR_5]
	MOV VR_7, #0
	STR VR_7, [VR_3]
	B .BLOCK_50
.BLOCK_50:
	LDR VR_8, [VR_3]
	CMP VR_8, #1000
	BLT .BLOCK_51
	BGE .BLOCK_52
.BLOCK_51:
	LDR VR_9, [VR_3]
	ADD VR_10, VR_4, VR_9, LSL #2
	MOV VR_11, #0
	STR VR_11, [VR_10]
	LDR VR_12, [VR_3]
	ADD VR_13, VR_12, #1
	STR VR_13, [VR_3]
	B .BLOCK_50
.BLOCK_52:
	MOV VR_14, #0
	STR VR_14, [VR_3]
	MOV VR_15, #0
	STR VR_15, [VR_2]
	B .BLOCK_53
.BLOCK_53:
	LDR VR_16, [VR_3]
	MOVW VR_18, :lower16:n
	MOVT VR_18, :upper16:n
	LDR VR_17, [VR_18]
	CMP VR_16, VR_17
	BLT .BLOCK_54
	BGE .BLOCK_55
.BLOCK_54:
	LDR VR_19, [VR_5]
	LDR VR_20, [VR_3]
	ADD VR_21, VR_19, VR_20, LSL #2
	LDR VR_22, [VR_21]
	STR VR_22, [VR_0]
	LDR VR_23, [VR_0]
	ADD VR_24, VR_4, VR_23, LSL #2
	LDR VR_25, [VR_0]
	ADD VR_26, VR_4, VR_25, LSL #2
	LDR VR_27, [VR_26]
	ADD VR_28, VR_27, #1
	STR VR_28, [VR_24]
	B .BLOCK_56
.BLOCK_55:
	LDR VR_29, [VR_1]
	MOV r0, VR_29
	MOVW r5, #4020
	ADD sp, sp, r5
	BX lr
.BLOCK_56:
	LDR VR_30, [VR_0]
	ADD VR_31, VR_4, VR_30, LSL #2
	LDR VR_32, [VR_31]
	LDR VR_33, [VR_2]
	CMP VR_32, VR_33
	BGT .BLOCK_58
	BLE .BLOCK_57
.BLOCK_57:
	LDR VR_34, [VR_3]
	ADD VR_35, VR_34, #1
	STR VR_35, [VR_3]
	B .BLOCK_53
.BLOCK_58:
	LDR VR_36, [VR_0]
	ADD VR_37, VR_4, VR_36, LSL #2
	LDR VR_38, [VR_37]
	STR VR_38, [VR_2]
	LDR VR_39, [VR_0]
	STR VR_39, [VR_1]
	B .BLOCK_57
.BLOCK_59:
	MOV r0, #0
	MOVW r5, #4020
	ADD sp, sp, r5
	BX lr


	.global revert
revert:
.BLOCK_60:
	SUB sp, sp, #16
	MOV VR_4, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	STR VR_4, [VR_3]
	MOV VR_5, #0
	STR VR_5, [VR_1]
	MOV VR_6, #0
	STR VR_6, [VR_0]
	B .BLOCK_61
.BLOCK_61:
	LDR VR_7, [VR_1]
	LDR VR_8, [VR_0]
	CMP VR_7, VR_8
	BLT .BLOCK_62
	BGE .BLOCK_63
.BLOCK_62:
	LDR VR_9, [VR_3]
	LDR VR_10, [VR_1]
	ADD VR_11, VR_9, VR_10, LSL #2
	LDR VR_12, [VR_11]
	STR VR_12, [VR_2]
	LDR VR_13, [VR_3]
	LDR VR_14, [VR_1]
	ADD VR_15, VR_13, VR_14, LSL #2
	LDR VR_16, [VR_3]
	LDR VR_17, [VR_0]
	ADD VR_18, VR_16, VR_17, LSL #2
	LDR VR_19, [VR_18]
	STR VR_19, [VR_15]
	LDR VR_20, [VR_3]
	LDR VR_21, [VR_0]
	ADD VR_22, VR_20, VR_21, LSL #2
	LDR VR_23, [VR_2]
	STR VR_23, [VR_22]
	LDR VR_24, [VR_1]
	ADD VR_25, VR_24, #1
	STR VR_25, [VR_1]
	LDR VR_26, [VR_0]
	SUB VR_27, VR_26, #1
	STR VR_27, [VR_0]
	B .BLOCK_61
.BLOCK_63:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr
.BLOCK_64:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr


	.global arrCopy
arrCopy:
.BLOCK_65:
	SUB sp, sp, #12
	MOV VR_4, r1
	MOV VR_3, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	STR VR_3, [VR_2]
	STR VR_4, [VR_1]
	MOV VR_5, #0
	STR VR_5, [VR_0]
	B .BLOCK_66
.BLOCK_66:
	LDR VR_6, [VR_0]
	MOVW VR_8, :lower16:n
	MOVT VR_8, :upper16:n
	LDR VR_7, [VR_8]
	CMP VR_6, VR_7
	BLT .BLOCK_67
	BGE .BLOCK_68
.BLOCK_67:
	LDR VR_9, [VR_1]
	LDR VR_10, [VR_0]
	ADD VR_11, VR_9, VR_10, LSL #2
	LDR VR_12, [VR_2]
	LDR VR_13, [VR_0]
	ADD VR_14, VR_12, VR_13, LSL #2
	LDR VR_15, [VR_14]
	STR VR_15, [VR_11]
	LDR VR_16, [VR_0]
	ADD VR_17, VR_16, #1
	STR VR_17, [VR_0]
	B .BLOCK_66
.BLOCK_68:
	MOV r0, #0
	ADD sp, sp, #12
	BX lr
.BLOCK_69:
	MOV r0, #0
	ADD sp, sp, #12
	BX lr


	.global calSum
calSum:
.BLOCK_70:
	SUB sp, sp, #16
	MOV VR_5, r1
	MOV VR_4, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	STR VR_4, [VR_3]
	STR VR_5, [VR_2]
	MOV VR_6, #0
	STR VR_6, [VR_1]
	MOV VR_7, #0
	STR VR_7, [VR_0]
	B .BLOCK_71
.BLOCK_71:
	LDR VR_8, [VR_0]
	MOVW VR_10, :lower16:n
	MOVT VR_10, :upper16:n
	LDR VR_9, [VR_10]
	CMP VR_8, VR_9
	BLT .BLOCK_72
	BGE .BLOCK_73
.BLOCK_72:
	LDR VR_11, [VR_1]
	LDR VR_12, [VR_3]
	LDR VR_13, [VR_0]
	ADD VR_14, VR_12, VR_13, LSL #2
	LDR VR_15, [VR_14]
	ADD VR_16, VR_11, VR_15
	STR VR_16, [VR_1]
	B .BLOCK_74
.BLOCK_73:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr
.BLOCK_74:
	LDR VR_17, [VR_0]
	LDR VR_18, [VR_2]
	SDIV VR_19, VR_17, VR_18
	MUL VR_20, VR_19, VR_18
	SUB VR_21, VR_17, VR_20
	LDR VR_22, [VR_2]
	SUB VR_23, VR_22, #1
	CMP VR_21, VR_23
	BNE .BLOCK_76
	BEQ .BLOCK_77
.BLOCK_75:
	LDR VR_24, [VR_0]
	ADD VR_25, VR_24, #1
	STR VR_25, [VR_0]
	B .BLOCK_71
.BLOCK_76:
	LDR VR_26, [VR_3]
	LDR VR_27, [VR_0]
	ADD VR_28, VR_26, VR_27, LSL #2
	MOV VR_29, #0
	STR VR_29, [VR_28]
	B .BLOCK_75
.BLOCK_77:
	LDR VR_30, [VR_3]
	LDR VR_31, [VR_0]
	ADD VR_32, VR_30, VR_31, LSL #2
	LDR VR_33, [VR_1]
	STR VR_33, [VR_32]
	MOV VR_34, #0
	STR VR_34, [VR_1]
	B .BLOCK_75
.BLOCK_78:
	MOV r0, #0
	ADD sp, sp, #16
	BX lr


	.global avgPooling
avgPooling:
.BLOCK_79:
	SUB sp, sp, #20
	MOV VR_6, r1
	MOV VR_5, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	ADD VR_4, sp, #16
	STR VR_5, [VR_4]
	STR VR_6, [VR_3]
	MOV VR_7, #0
	STR VR_7, [VR_1]
	MOV VR_8, #0
	STR VR_8, [VR_2]
	B .BLOCK_80
.BLOCK_80:
	LDR VR_9, [VR_1]
	MOVW VR_11, :lower16:n
	MOVT VR_11, :upper16:n
	LDR VR_10, [VR_11]
	CMP VR_9, VR_10
	BLT .BLOCK_81
	BGE .BLOCK_82
.BLOCK_81:
	B .BLOCK_83
.BLOCK_82:
	MOVW VR_13, :lower16:n
	MOVT VR_13, :upper16:n
	LDR VR_12, [VR_13]
	LDR VR_14, [VR_3]
	SUB VR_15, VR_12, VR_14
	ADD VR_16, VR_15, #1
	STR VR_16, [VR_1]
	B .BLOCK_91
.BLOCK_83:
	LDR VR_17, [VR_1]
	LDR VR_18, [VR_3]
	SUB VR_19, VR_18, #1
	CMP VR_17, VR_19
	BLT .BLOCK_85
	BGE .BLOCK_86
.BLOCK_84:
	LDR VR_20, [VR_1]
	ADD VR_21, VR_20, #1
	STR VR_21, [VR_1]
	B .BLOCK_80
.BLOCK_85:
	LDR VR_22, [VR_2]
	LDR VR_23, [VR_4]
	LDR VR_24, [VR_1]
	ADD VR_25, VR_23, VR_24, LSL #2
	LDR VR_26, [VR_25]
	ADD VR_27, VR_22, VR_26
	STR VR_27, [VR_2]
	B .BLOCK_84
.BLOCK_86:
	B .BLOCK_87
.BLOCK_87:
	LDR VR_28, [VR_1]
	LDR VR_29, [VR_3]
	SUB VR_30, VR_29, #1
	CMP VR_28, VR_30
	BEQ .BLOCK_89
	BNE .BLOCK_90
.BLOCK_88:
	B .BLOCK_84
.BLOCK_89:
	LDR VR_31, [VR_4]
	MOV VR_32, VR_31
	LDR VR_33, [VR_32]
	STR VR_33, [VR_0]
	LDR VR_34, [VR_4]
	MOV VR_35, VR_34
	LDR VR_36, [VR_2]
	LDR VR_37, [VR_3]
	SDIV VR_38, VR_36, VR_37
	STR VR_38, [VR_35]
	B .BLOCK_88
.BLOCK_90:
	LDR VR_39, [VR_2]
	LDR VR_40, [VR_4]
	LDR VR_41, [VR_1]
	ADD VR_42, VR_40, VR_41, LSL #2
	LDR VR_43, [VR_42]
	ADD VR_44, VR_39, VR_43
	LDR VR_45, [VR_0]
	SUB VR_46, VR_44, VR_45
	STR VR_46, [VR_2]
	LDR VR_47, [VR_4]
	LDR VR_48, [VR_1]
	LDR VR_49, [VR_3]
	SUB VR_50, VR_48, VR_49
	ADD VR_51, VR_50, #1
	ADD VR_52, VR_47, VR_51, LSL #2
	LDR VR_53, [VR_52]
	STR VR_53, [VR_0]
	LDR VR_54, [VR_4]
	LDR VR_55, [VR_1]
	LDR VR_56, [VR_3]
	SUB VR_57, VR_55, VR_56
	ADD VR_58, VR_57, #1
	ADD VR_59, VR_54, VR_58, LSL #2
	LDR VR_60, [VR_2]
	LDR VR_61, [VR_3]
	SDIV VR_62, VR_60, VR_61
	STR VR_62, [VR_59]
	B .BLOCK_88
.BLOCK_91:
	LDR VR_63, [VR_1]
	MOVW VR_65, :lower16:n
	MOVT VR_65, :upper16:n
	LDR VR_64, [VR_65]
	CMP VR_63, VR_64
	BLT .BLOCK_92
	BGE .BLOCK_93
.BLOCK_92:
	LDR VR_66, [VR_4]
	LDR VR_67, [VR_1]
	ADD VR_68, VR_66, VR_67, LSL #2
	MOV VR_69, #0
	STR VR_69, [VR_68]
	LDR VR_70, [VR_1]
	ADD VR_71, VR_70, #1
	STR VR_71, [VR_1]
	B .BLOCK_91
.BLOCK_93:
	MOV r0, #0
	ADD sp, sp, #20
	BX lr
.BLOCK_94:
	MOV r0, #0
	ADD sp, sp, #20
	BX lr


	.global main
main:
.BLOCK_95:
	SUB sp, sp, #264
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #136
	MOVW VR_4, :lower16:n
	MOVT VR_4, :upper16:n
	MOV VR_5, #32
	STR VR_5, [VR_4]
	MOV VR_6, VR_3
	MOV VR_7, #7
	STR VR_7, [VR_6]
	ADD VR_8, VR_3, #4
	MOV VR_9, #23
	STR VR_9, [VR_8]
	ADD VR_10, VR_3, #8
	MOV VR_11, #89
	STR VR_11, [VR_10]
	ADD VR_12, VR_3, #12
	MOV VR_13, #26
	STR VR_13, [VR_12]
	ADD VR_14, VR_3, #16
	MOVW VR_15, #282
	STR VR_15, [VR_14]
	ADD VR_16, VR_3, #20
	MOV VR_17, #254
	STR VR_17, [VR_16]
	ADD VR_18, VR_3, #24
	MOV VR_19, #27
	STR VR_19, [VR_18]
	ADD VR_20, VR_3, #28
	MOV VR_21, #5
	STR VR_21, [VR_20]
	ADD VR_22, VR_3, #32
	MOV VR_23, #83
	STR VR_23, [VR_22]
	ADD VR_24, VR_3, #36
	MOVW VR_25, #273
	STR VR_25, [VR_24]
	ADD VR_26, VR_3, #40
	MOVW VR_27, #574
	STR VR_27, [VR_26]
	ADD VR_28, VR_3, #44
	MOVW VR_29, #905
	STR VR_29, [VR_28]
	ADD VR_30, VR_3, #48
	MOVW VR_31, #354
	STR VR_31, [VR_30]
	ADD VR_32, VR_3, #52
	MOVW VR_33, #657
	STR VR_33, [VR_32]
	ADD VR_34, VR_3, #56
	MOVW VR_35, #935
	STR VR_35, [VR_34]
	ADD VR_36, VR_3, #60
	MOV VR_37, #264
	STR VR_37, [VR_36]
	ADD VR_38, VR_3, #64
	MOVW VR_39, #639
	STR VR_39, [VR_38]
	ADD VR_40, VR_3, #68
	MOVW VR_41, #459
	STR VR_41, [VR_40]
	ADD VR_42, VR_3, #72
	MOV VR_43, #29
	STR VR_43, [VR_42]
	ADD VR_44, VR_3, #76
	MOV VR_45, #68
	STR VR_45, [VR_44]
	ADD VR_46, VR_3, #80
	MOVW VR_47, #929
	STR VR_47, [VR_46]
	ADD VR_48, VR_3, #84
	MOV VR_49, #756
	STR VR_49, [VR_48]
	ADD VR_50, VR_3, #88
	MOV VR_51, #452
	STR VR_51, [VR_50]
	ADD VR_52, VR_3, #92
	MOVW VR_53, #279
	STR VR_53, [VR_52]
	ADD VR_54, VR_3, #96
	MOV VR_55, #58
	STR VR_55, [VR_54]
	ADD VR_56, VR_3, #100
	MOV VR_57, #87
	STR VR_57, [VR_56]
	ADD VR_58, VR_3, #104
	MOV VR_59, #96
	STR VR_59, [VR_58]
	ADD VR_60, VR_3, #108
	MOV VR_61, #36
	STR VR_61, [VR_60]
	ADD VR_62, VR_3, #112
	MOV VR_63, #39
	STR VR_63, [VR_62]
	ADD VR_64, VR_3, #116
	MOV VR_65, #28
	STR VR_65, [VR_64]
	ADD VR_66, VR_3, #120
	MOV VR_67, #1
	STR VR_67, [VR_66]
	ADD VR_68, VR_3, #124
	MOVW VR_69, #290
	STR VR_69, [VR_68]
	MOV VR_70, VR_3
	MOV VR_71, VR_2
	MOV r1, VR_71
	MOV r0, VR_70
	BL arrCopy
	MOV VR_72, r0
	STR VR_72, [VR_1]
	MOV VR_73, VR_2
	MOV r0, VR_73
	BL revert
	MOV VR_74, r0
	STR VR_74, [VR_1]
	MOV VR_75, #0
	STR VR_75, [VR_0]
	B .BLOCK_96
.BLOCK_96:
	LDR VR_76, [VR_0]
	CMP VR_76, #32
	BLT .BLOCK_97
	BGE .BLOCK_98
.BLOCK_97:
	LDR VR_77, [VR_0]
	ADD VR_78, VR_2, VR_77, LSL #2
	LDR VR_79, [VR_78]
	STR VR_79, [VR_1]
	LDR VR_80, [VR_1]
	MOV r0, VR_80
	BL putint
	LDR VR_81, [VR_0]
	ADD VR_82, VR_81, #1
	STR VR_82, [VR_0]
	B .BLOCK_96
.BLOCK_98:
	MOV VR_83, VR_2
	MOV r0, VR_83
	BL bubblesort
	MOV VR_84, r0
	STR VR_84, [VR_1]
	MOV VR_85, #0
	STR VR_85, [VR_0]
	B .BLOCK_99
.BLOCK_99:
	LDR VR_86, [VR_0]
	CMP VR_86, #32
	BLT .BLOCK_100
	BGE .BLOCK_101
.BLOCK_100:
	LDR VR_87, [VR_0]
	ADD VR_88, VR_2, VR_87, LSL #2
	LDR VR_89, [VR_88]
	STR VR_89, [VR_1]
	LDR VR_90, [VR_1]
	MOV r0, VR_90
	BL putint
	LDR VR_91, [VR_0]
	ADD VR_92, VR_91, #1
	STR VR_92, [VR_0]
	B .BLOCK_99
.BLOCK_101:
	MOV VR_93, VR_2
	MOV r0, VR_93
	BL getMid
	MOV VR_94, r0
	STR VR_94, [VR_1]
	LDR VR_95, [VR_1]
	MOV r0, VR_95
	BL putint
	MOV VR_96, VR_2
	MOV r0, VR_96
	BL getMost
	MOV VR_97, r0
	STR VR_97, [VR_1]
	LDR VR_98, [VR_1]
	MOV r0, VR_98
	BL putint
	MOV VR_99, VR_3
	MOV VR_100, VR_2
	MOV r1, VR_100
	MOV r0, VR_99
	BL arrCopy
	MOV VR_101, r0
	STR VR_101, [VR_1]
	MOV VR_102, VR_2
	MOV r0, VR_102
	BL bubblesort
	MOV VR_103, r0
	STR VR_103, [VR_1]
	MOV VR_104, #0
	STR VR_104, [VR_0]
	B .BLOCK_102
.BLOCK_102:
	LDR VR_105, [VR_0]
	CMP VR_105, #32
	BLT .BLOCK_103
	BGE .BLOCK_104
.BLOCK_103:
	LDR VR_106, [VR_0]
	ADD VR_107, VR_2, VR_106, LSL #2
	LDR VR_108, [VR_107]
	STR VR_108, [VR_1]
	LDR VR_109, [VR_1]
	MOV r0, VR_109
	BL putint
	LDR VR_110, [VR_0]
	ADD VR_111, VR_110, #1
	STR VR_111, [VR_0]
	B .BLOCK_102
.BLOCK_104:
	MOV VR_112, VR_3
	MOV VR_113, VR_2
	MOV r1, VR_113
	MOV r0, VR_112
	BL arrCopy
	MOV VR_114, r0
	STR VR_114, [VR_1]
	MOV VR_115, VR_2
	MOV r0, VR_115
	BL insertsort
	MOV VR_116, r0
	STR VR_116, [VR_1]
	MOV VR_117, #0
	STR VR_117, [VR_0]
	B .BLOCK_105
.BLOCK_105:
	LDR VR_118, [VR_0]
	CMP VR_118, #32
	BLT .BLOCK_106
	BGE .BLOCK_107
.BLOCK_106:
	LDR VR_119, [VR_0]
	ADD VR_120, VR_2, VR_119, LSL #2
	LDR VR_121, [VR_120]
	STR VR_121, [VR_1]
	LDR VR_122, [VR_1]
	MOV r0, VR_122
	BL putint
	LDR VR_123, [VR_0]
	ADD VR_124, VR_123, #1
	STR VR_124, [VR_0]
	B .BLOCK_105
.BLOCK_107:
	MOV VR_125, VR_3
	MOV VR_126, VR_2
	MOV r1, VR_126
	MOV r0, VR_125
	BL arrCopy
	MOV VR_127, r0
	STR VR_127, [VR_1]
	MOV VR_128, #0
	STR VR_128, [VR_0]
	MOV VR_129, #31
	STR VR_129, [VR_1]
	MOV VR_130, VR_2
	LDR VR_131, [VR_0]
	LDR VR_132, [VR_1]
	MOV r2, VR_132
	MOV r1, VR_131
	MOV r0, VR_130
	BL QuickSort
	MOV VR_133, r0
	STR VR_133, [VR_1]
	B .BLOCK_108
.BLOCK_108:
	LDR VR_134, [VR_0]
	CMP VR_134, #32
	BLT .BLOCK_109
	BGE .BLOCK_110
.BLOCK_109:
	LDR VR_135, [VR_0]
	ADD VR_136, VR_2, VR_135, LSL #2
	LDR VR_137, [VR_136]
	STR VR_137, [VR_1]
	LDR VR_138, [VR_1]
	MOV r0, VR_138
	BL putint
	LDR VR_139, [VR_0]
	ADD VR_140, VR_139, #1
	STR VR_140, [VR_0]
	B .BLOCK_108
.BLOCK_110:
	MOV VR_141, VR_3
	MOV VR_142, VR_2
	MOV r1, VR_142
	MOV r0, VR_141
	BL arrCopy
	MOV VR_143, r0
	STR VR_143, [VR_1]
	MOV VR_144, VR_2
	MOV r1, #4
	MOV r0, VR_144
	BL calSum
	MOV VR_145, r0
	STR VR_145, [VR_1]
	MOV VR_146, #0
	STR VR_146, [VR_0]
	B .BLOCK_111
.BLOCK_111:
	LDR VR_147, [VR_0]
	CMP VR_147, #32
	BLT .BLOCK_112
	BGE .BLOCK_113
.BLOCK_112:
	LDR VR_148, [VR_0]
	ADD VR_149, VR_2, VR_148, LSL #2
	LDR VR_150, [VR_149]
	STR VR_150, [VR_1]
	LDR VR_151, [VR_1]
	MOV r0, VR_151
	BL putint
	LDR VR_152, [VR_0]
	ADD VR_153, VR_152, #1
	STR VR_153, [VR_0]
	B .BLOCK_111
.BLOCK_113:
	MOV VR_154, VR_3
	MOV VR_155, VR_2
	MOV r1, VR_155
	MOV r0, VR_154
	BL arrCopy
	MOV VR_156, r0
	STR VR_156, [VR_1]
	MOV VR_157, VR_2
	MOV r1, #3
	MOV r0, VR_157
	BL avgPooling
	MOV VR_158, r0
	STR VR_158, [VR_1]
	MOV VR_159, #0
	STR VR_159, [VR_0]
	B .BLOCK_114
.BLOCK_114:
	LDR VR_160, [VR_0]
	CMP VR_160, #32
	BLT .BLOCK_115
	BGE .BLOCK_116
.BLOCK_115:
	LDR VR_161, [VR_0]
	ADD VR_162, VR_2, VR_161, LSL #2
	LDR VR_163, [VR_162]
	STR VR_163, [VR_1]
	LDR VR_164, [VR_1]
	MOV r0, VR_164
	BL putint
	LDR VR_165, [VR_0]
	ADD VR_166, VR_165, #1
	STR VR_166, [VR_0]
	B .BLOCK_114
.BLOCK_116:
	MOV r0, #0
	ADD sp, sp, #264
	POP {pc}
.BLOCK_117:
	MOV r0, #0
	ADD sp, sp, #264
	POP {pc}


	.data
	.align 4
	.global n
n:
	.zero	4


	.end
