	.cpu cortex-a7
	.arch armv7ve
	.fpu vfpv4

	.text

	.global my_getint
my_getint:
.BLOCK_0:
	SUB sp, sp, #8
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	MOV VR_2, #0
	STR VR_2, [VR_1]
	B .BLOCK_1
.BLOCK_1:
	MOV VR_3, #1
	CMP VR_3, #0
	BNE .BLOCK_2
	BEQ .BLOCK_3
.BLOCK_2:
	BL getch
	MOV VR_4, r0
	SUB VR_5, VR_4, #48
	STR VR_5, [VR_0]
	B .BLOCK_4
.BLOCK_3:
	LDR VR_6, [VR_0]
	STR VR_6, [VR_1]
	B .BLOCK_11
.BLOCK_4:
	LDR VR_7, [VR_0]
	CMP VR_7, #0
	BLT .BLOCK_6
	BGE .BLOCK_10
.BLOCK_5:
	B .BLOCK_1
.BLOCK_6:
	B .BLOCK_1
.BLOCK_7:
	B .BLOCK_5
.BLOCK_8:
	B .BLOCK_3
.BLOCK_9:
	B .BLOCK_5
.BLOCK_10:
	LDR VR_8, [VR_0]
	CMP VR_8, #9
	BGT .BLOCK_6
	BLE .BLOCK_8
.BLOCK_11:
	MOV VR_9, #1
	CMP VR_9, #0
	BNE .BLOCK_12
	BEQ .BLOCK_13
.BLOCK_12:
	BL getch
	MOV VR_10, r0
	SUB VR_11, VR_10, #48
	STR VR_11, [VR_0]
	B .BLOCK_14
.BLOCK_13:
	LDR VR_12, [VR_1]
	MOV r0, VR_12
	ADD sp, sp, #8
	POP {pc}
.BLOCK_14:
	LDR VR_13, [VR_0]
	CMP VR_13, #0
	BGE .BLOCK_19
	BLT .BLOCK_17
.BLOCK_15:
	B .BLOCK_11
.BLOCK_16:
	LDR VR_14, [VR_1]
	MOV VR_16, #10
	MUL VR_15, VR_14, VR_16
	LDR VR_17, [VR_0]
	ADD VR_18, VR_15, VR_17
	STR VR_18, [VR_1]
	B .BLOCK_15
.BLOCK_17:
	B .BLOCK_13
.BLOCK_18:
	B .BLOCK_15
.BLOCK_19:
	LDR VR_19, [VR_0]
	CMP VR_19, #9
	BLE .BLOCK_16
	BGT .BLOCK_17
.BLOCK_20:
	MOV r0, #0
	ADD sp, sp, #8
	POP {pc}


	.global my_putint
my_putint:
.BLOCK_21:
	SUB sp, sp, #72
	MOV VR_3, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #68
	STR VR_3, [VR_2]
	MOV VR_4, #0
	STR VR_4, [VR_0]
	B .BLOCK_22
.BLOCK_22:
	LDR VR_5, [VR_2]
	CMP VR_5, #0
	BGT .BLOCK_23
	BLE .BLOCK_24
.BLOCK_23:
	LDR VR_6, [VR_0]
	ADD VR_7, VR_1, VR_6, LSL #2
	LDR VR_8, [VR_2]
	MOVW VR_12, #26215
	MOVT VR_12, #26214
	SMULL VR_9, VR_10, VR_12, VR_8
	MOV VR_11, VR_10, ASR #2
	SUB VR_9, VR_11, VR_8, ASR #31
	MOV VR_14, #10
	MUL VR_13, VR_9, VR_14
	SUB VR_15, VR_8, VR_13
	ADD VR_16, VR_15, #48
	STR VR_16, [VR_7]
	LDR VR_17, [VR_2]
	MOVW VR_21, #26215
	MOVT VR_21, #26214
	SMULL VR_18, VR_19, VR_21, VR_17
	MOV VR_20, VR_19, ASR #2
	SUB VR_18, VR_20, VR_17, ASR #31
	STR VR_18, [VR_2]
	LDR VR_22, [VR_0]
	ADD VR_23, VR_22, #1
	STR VR_23, [VR_0]
	B .BLOCK_22
.BLOCK_24:
	B .BLOCK_25
.BLOCK_25:
	LDR VR_24, [VR_0]
	CMP VR_24, #0
	BGT .BLOCK_26
	BLE .BLOCK_27
.BLOCK_26:
	LDR VR_25, [VR_0]
	SUB VR_26, VR_25, #1
	STR VR_26, [VR_0]
	LDR VR_27, [VR_0]
	ADD VR_28, VR_1, VR_27, LSL #2
	LDR VR_29, [VR_28]
	MOV r0, VR_29
	BL putch
	B .BLOCK_25
.BLOCK_27:
	ADD sp, sp, #72
	POP {pc}


	.global main
main:
.BLOCK_28:
	SUB sp, sp, #8
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	BL my_getint
	MOV VR_2, r0
	STR VR_2, [VR_1]
	B .BLOCK_29
.BLOCK_29:
	LDR VR_3, [VR_1]
	CMP VR_3, #0
	BGT .BLOCK_30
	BLE .BLOCK_31
.BLOCK_30:
	BL my_getint
	MOV VR_4, r0
	STR VR_4, [VR_0]
	LDR VR_5, [VR_0]
	MOV r0, VR_5
	BL my_putint
	MOV r0, #10
	BL putch
	LDR VR_6, [VR_1]
	SUB VR_7, VR_6, #1
	STR VR_7, [VR_1]
	B .BLOCK_29
.BLOCK_31:
	MOV r0, #0
	ADD sp, sp, #8
	POP {pc}
.BLOCK_32:
	MOV r0, #0
	ADD sp, sp, #8
	POP {pc}


	.end
