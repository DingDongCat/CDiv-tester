	.cpu cortex-a7
	.arch armv7ve
	.fpu vfpv4

	.text

	.global MAX
MAX:
.BLOCK_0:
	SUB sp, sp, #8
	MOV VR_3, r1
	MOV VR_2, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	STR VR_2, [VR_1]
	STR VR_3, [VR_0]
	B .BLOCK_1
.BLOCK_1:
	LDR VR_4, [VR_1]
	LDR VR_5, [VR_0]
	CMP VR_4, VR_5
	BEQ .BLOCK_3
	BNE .BLOCK_5
.BLOCK_2:
	MOV r0, #0
	ADD sp, sp, #8
	BX lr
.BLOCK_3:
	LDR VR_6, [VR_1]
	MOV r0, VR_6
	ADD sp, sp, #8
	BX lr
.BLOCK_4:
	B .BLOCK_2
.BLOCK_5:
	B .BLOCK_6
.BLOCK_6:
	LDR VR_7, [VR_1]
	LDR VR_8, [VR_0]
	CMP VR_7, VR_8
	BGT .BLOCK_8
	BLE .BLOCK_10
.BLOCK_7:
	B .BLOCK_2
.BLOCK_8:
	LDR VR_9, [VR_1]
	MOV r0, VR_9
	ADD sp, sp, #8
	BX lr
.BLOCK_9:
	B .BLOCK_7
.BLOCK_10:
	LDR VR_10, [VR_0]
	MOV r0, VR_10
	ADD sp, sp, #8
	BX lr
.BLOCK_11:
	B .BLOCK_7


	.global max_sum_nonadjacent
max_sum_nonadjacent:
.BLOCK_12:
	SUB sp, sp, #76
	MOV VR_5, r1
	MOV VR_4, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #68
	ADD VR_3, sp, #72
	STR VR_4, [VR_3]
	STR VR_5, [VR_2]
	MOV VR_6, VR_1
	MOV r2, #64
	MOV r1, #0
	MOV r0, VR_6
	BL memset
	MOV VR_7, VR_1
	LDR VR_8, [VR_3]
	MOV VR_9, VR_8
	LDR VR_10, [VR_9]
	STR VR_10, [VR_7]
	ADD VR_11, VR_1, #4
	LDR VR_12, [VR_3]
	MOV VR_13, VR_12
	LDR VR_14, [VR_13]
	LDR VR_15, [VR_3]
	ADD VR_16, VR_15, #4
	LDR VR_17, [VR_16]
	MOV r1, VR_17
	MOV r0, VR_14
	BL MAX
	MOV VR_18, r0
	STR VR_18, [VR_11]
	MOV VR_19, #2
	STR VR_19, [VR_0]
	B .BLOCK_13
.BLOCK_13:
	LDR VR_20, [VR_0]
	LDR VR_21, [VR_2]
	CMP VR_20, VR_21
	BLT .BLOCK_14
	BGE .BLOCK_15
.BLOCK_14:
	LDR VR_22, [VR_0]
	ADD VR_23, VR_1, VR_22, LSL #2
	LDR VR_24, [VR_0]
	SUB VR_25, VR_24, #2
	ADD VR_26, VR_1, VR_25, LSL #2
	LDR VR_27, [VR_3]
	LDR VR_28, [VR_0]
	ADD VR_29, VR_27, VR_28, LSL #2
	LDR VR_30, [VR_26]
	LDR VR_31, [VR_29]
	ADD VR_32, VR_30, VR_31
	LDR VR_33, [VR_0]
	SUB VR_34, VR_33, #1
	ADD VR_35, VR_1, VR_34, LSL #2
	LDR VR_36, [VR_35]
	MOV r1, VR_36
	MOV r0, VR_32
	BL MAX
	MOV VR_37, r0
	STR VR_37, [VR_23]
	LDR VR_38, [VR_0]
	ADD VR_39, VR_38, #1
	STR VR_39, [VR_0]
	B .BLOCK_13
.BLOCK_15:
	LDR VR_40, [VR_2]
	SUB VR_41, VR_40, #1
	ADD VR_42, VR_1, VR_41, LSL #2
	LDR VR_43, [VR_42]
	MOV r0, VR_43
	ADD sp, sp, #76
	POP {pc}
.BLOCK_16:
	MOV r0, #0
	ADD sp, sp, #76
	POP {pc}


	.global longest_common_subseq
longest_common_subseq:
.BLOCK_17:
	MOVW VR_70, #1048
	SUB sp, sp, VR_70
	MOV VR_13, r3
	MOV VR_12, r2
	MOV VR_11, r1
	MOV VR_10, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	MOVW VR_4, #1032
	ADD VR_3, sp, VR_4
	MOVW VR_6, #1036
	ADD VR_5, sp, VR_6
	ADD VR_7, sp, #1040
	MOVW VR_9, #1044
	ADD VR_8, sp, VR_9
	STR VR_10, [VR_8]
	STR VR_11, [VR_7]
	STR VR_12, [VR_5]
	STR VR_13, [VR_3]
	MOV VR_14, VR_2
	MOV VR_15, VR_14
	MOV r2, #1024
	MOV r1, #0
	MOV r0, VR_15
	BL memset
	MOV VR_16, #1
	STR VR_16, [VR_1]
	B .BLOCK_18
.BLOCK_18:
	LDR VR_17, [VR_1]
	LDR VR_18, [VR_7]
	CMP VR_17, VR_18
	BLE .BLOCK_19
	BGT .BLOCK_20
.BLOCK_19:
	MOV VR_19, #1
	STR VR_19, [VR_0]
	B .BLOCK_21
.BLOCK_20:
	LDR VR_20, [VR_7]
	ADD VR_21, VR_2, VR_20, LSL #6
	LDR VR_22, [VR_3]
	ADD VR_23, VR_21, VR_22, LSL #2
	LDR VR_24, [VR_23]
	MOV r0, VR_24
	MOVW r5, #1048
	ADD sp, sp, r5
	POP {pc}
.BLOCK_21:
	LDR VR_25, [VR_0]
	LDR VR_26, [VR_3]
	CMP VR_25, VR_26
	BLE .BLOCK_22
	BGT .BLOCK_23
.BLOCK_22:
	B .BLOCK_24
.BLOCK_23:
	LDR VR_27, [VR_1]
	ADD VR_28, VR_27, #1
	STR VR_28, [VR_1]
	B .BLOCK_18
.BLOCK_24:
	LDR VR_29, [VR_8]
	LDR VR_30, [VR_1]
	SUB VR_31, VR_30, #1
	ADD VR_32, VR_29, VR_31, LSL #2
	LDR VR_33, [VR_32]
	LDR VR_34, [VR_5]
	LDR VR_35, [VR_0]
	SUB VR_36, VR_35, #1
	ADD VR_37, VR_34, VR_36, LSL #2
	LDR VR_38, [VR_37]
	CMP VR_33, VR_38
	BEQ .BLOCK_26
	BNE .BLOCK_27
.BLOCK_25:
	LDR VR_39, [VR_0]
	ADD VR_40, VR_39, #1
	STR VR_40, [VR_0]
	B .BLOCK_21
.BLOCK_26:
	LDR VR_41, [VR_1]
	ADD VR_42, VR_2, VR_41, LSL #6
	LDR VR_43, [VR_0]
	ADD VR_44, VR_42, VR_43, LSL #2
	LDR VR_45, [VR_1]
	SUB VR_46, VR_45, #1
	ADD VR_47, VR_2, VR_46, LSL #6
	LDR VR_48, [VR_0]
	SUB VR_49, VR_48, #1
	ADD VR_50, VR_47, VR_49, LSL #2
	LDR VR_51, [VR_50]
	ADD VR_52, VR_51, #1
	STR VR_52, [VR_44]
	B .BLOCK_25
.BLOCK_27:
	LDR VR_53, [VR_1]
	ADD VR_54, VR_2, VR_53, LSL #6
	LDR VR_55, [VR_0]
	ADD VR_56, VR_54, VR_55, LSL #2
	LDR VR_57, [VR_1]
	SUB VR_58, VR_57, #1
	ADD VR_59, VR_2, VR_58, LSL #6
	LDR VR_60, [VR_0]
	ADD VR_61, VR_59, VR_60, LSL #2
	LDR VR_62, [VR_61]
	LDR VR_63, [VR_1]
	ADD VR_64, VR_2, VR_63, LSL #6
	LDR VR_65, [VR_0]
	SUB VR_66, VR_65, #1
	ADD VR_67, VR_64, VR_66, LSL #2
	LDR VR_68, [VR_67]
	MOV r1, VR_68
	MOV r0, VR_62
	BL MAX
	MOV VR_69, r0
	STR VR_69, [VR_56]
	B .BLOCK_25
.BLOCK_28:
	MOV r0, #0
	MOVW r5, #1048
	ADD sp, sp, r5
	POP {pc}


	.global main
main:
.BLOCK_29:
	SUB sp, sp, #120
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #60
	MOV VR_4, VR_3
	MOV r2, #60
	MOV r1, #0
	MOV r0, VR_4
	BL memset
	MOV VR_5, #8
	STR VR_5, [VR_4]
	ADD VR_6, VR_4, #4
	MOV VR_7, #7
	STR VR_7, [VR_6]
	ADD VR_8, VR_4, #8
	MOV VR_9, #4
	STR VR_9, [VR_8]
	ADD VR_10, VR_4, #12
	MOV VR_11, #1
	STR VR_11, [VR_10]
	ADD VR_12, VR_4, #16
	MOV VR_13, #2
	STR VR_13, [VR_12]
	ADD VR_14, VR_4, #20
	MOV VR_15, #7
	STR VR_15, [VR_14]
	ADD VR_16, VR_4, #28
	MOV VR_17, #1
	STR VR_17, [VR_16]
	ADD VR_18, VR_4, #32
	MOV VR_19, #9
	STR VR_19, [VR_18]
	ADD VR_20, VR_4, #36
	MOV VR_21, #3
	STR VR_21, [VR_20]
	ADD VR_22, VR_4, #40
	MOV VR_23, #4
	STR VR_23, [VR_22]
	ADD VR_24, VR_4, #44
	MOV VR_25, #8
	STR VR_25, [VR_24]
	ADD VR_26, VR_4, #48
	MOV VR_27, #3
	STR VR_27, [VR_26]
	ADD VR_28, VR_4, #52
	MOV VR_29, #7
	STR VR_29, [VR_28]
	MOV VR_30, VR_2
	MOV r2, #52
	MOV r1, #0
	MOV r0, VR_30
	BL memset
	MOV VR_31, #3
	STR VR_31, [VR_30]
	ADD VR_32, VR_30, #4
	MOV VR_33, #9
	STR VR_33, [VR_32]
	ADD VR_34, VR_30, #8
	MOV VR_35, #7
	STR VR_35, [VR_34]
	ADD VR_36, VR_30, #12
	MOV VR_37, #1
	STR VR_37, [VR_36]
	ADD VR_38, VR_30, #16
	MOV VR_39, #4
	STR VR_39, [VR_38]
	ADD VR_40, VR_30, #20
	MOV VR_41, #2
	STR VR_41, [VR_40]
	ADD VR_42, VR_30, #24
	MOV VR_43, #4
	STR VR_43, [VR_42]
	ADD VR_44, VR_30, #28
	MOV VR_45, #3
	STR VR_45, [VR_44]
	ADD VR_46, VR_30, #32
	MOV VR_47, #6
	STR VR_47, [VR_46]
	ADD VR_48, VR_30, #36
	MOV VR_49, #8
	STR VR_49, [VR_48]
	ADD VR_50, VR_30, #44
	MOV VR_51, #1
	STR VR_51, [VR_50]
	ADD VR_52, VR_30, #48
	MOV VR_53, #5
	STR VR_53, [VR_52]
	MOV VR_54, VR_3
	MOV r1, #15
	MOV r0, VR_54
	BL max_sum_nonadjacent
	MOV VR_55, r0
	MOV r0, VR_55
	BL putint
	MOV r0, #10
	BL putch
	MOV VR_56, VR_3
	MOV VR_57, VR_2
	MOV r3, #13
	MOV r2, VR_57
	MOV r1, #15
	MOV r0, VR_56
	BL longest_common_subseq
	MOV VR_58, r0
	MOV r0, VR_58
	BL putint
	MOV r0, #10
	BL putch
	MOV r0, #0
	ADD sp, sp, #120
	POP {pc}
.BLOCK_30:
	MOV r0, #0
	ADD sp, sp, #120
	POP {pc}


	.end
