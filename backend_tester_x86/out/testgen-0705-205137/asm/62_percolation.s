	.cpu cortex-a7
	.arch armv7ve
	.fpu vfpv4

	.text

	.global init
init:
.BLOCK_0:
	SUB sp, sp, #8
	MOV VR_2, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	STR VR_2, [VR_1]
	MOV VR_3, #1
	STR VR_3, [VR_0]
	B .BLOCK_1
.BLOCK_1:
	LDR VR_4, [VR_0]
	LDR VR_5, [VR_1]
	LDR VR_6, [VR_1]
	MUL VR_7, VR_5, VR_6
	ADD VR_8, VR_7, #1
	CMP VR_4, VR_8
	BLE .BLOCK_2
	BGT .BLOCK_3
.BLOCK_2:
	LDR VR_9, [VR_0]
	MOVW VR_10, :lower16:array
	MOVT VR_10, :upper16:array
	ADD VR_11, VR_10, VR_9, LSL #2
	MOV VR_13, #0
	SUB VR_12, VR_13, #1
	STR VR_12, [VR_11]
	LDR VR_14, [VR_0]
	ADD VR_15, VR_14, #1
	STR VR_15, [VR_0]
	B .BLOCK_1
.BLOCK_3:
	ADD sp, sp, #8
	BX lr


	.global findfa
findfa:
.BLOCK_4:
	SUB sp, sp, #4
	MOV VR_1, r0
	ADD VR_0, sp, #0
	STR VR_1, [VR_0]
	B .BLOCK_5
.BLOCK_5:
	LDR VR_2, [VR_0]
	MOVW VR_3, :lower16:array
	MOVT VR_3, :upper16:array
	ADD VR_4, VR_3, VR_2, LSL #2
	LDR VR_5, [VR_4]
	LDR VR_6, [VR_0]
	CMP VR_5, VR_6
	BEQ .BLOCK_7
	BNE .BLOCK_9
.BLOCK_6:
	MOV r0, #0
	ADD sp, sp, #4
	POP {pc}
.BLOCK_7:
	LDR VR_7, [VR_0]
	MOV r0, VR_7
	ADD sp, sp, #4
	POP {pc}
.BLOCK_8:
	B .BLOCK_6
.BLOCK_9:
	LDR VR_8, [VR_0]
	MOVW VR_9, :lower16:array
	MOVT VR_9, :upper16:array
	ADD VR_10, VR_9, VR_8, LSL #2
	LDR VR_11, [VR_0]
	MOVW VR_12, :lower16:array
	MOVT VR_12, :upper16:array
	ADD VR_13, VR_12, VR_11, LSL #2
	LDR VR_14, [VR_13]
	MOV r0, VR_14
	BL findfa
	MOV VR_15, r0
	STR VR_15, [VR_10]
	LDR VR_16, [VR_0]
	MOVW VR_17, :lower16:array
	MOVT VR_17, :upper16:array
	ADD VR_18, VR_17, VR_16, LSL #2
	LDR VR_19, [VR_18]
	MOV r0, VR_19
	ADD sp, sp, #4
	POP {pc}
.BLOCK_10:
	B .BLOCK_6


	.global mmerge
mmerge:
.BLOCK_11:
	SUB sp, sp, #16
	MOV VR_5, r1
	MOV VR_4, r0
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	STR VR_4, [VR_3]
	STR VR_5, [VR_2]
	LDR VR_6, [VR_3]
	MOV r0, VR_6
	BL findfa
	MOV VR_7, r0
	STR VR_7, [VR_1]
	LDR VR_8, [VR_2]
	MOV r0, VR_8
	BL findfa
	MOV VR_9, r0
	STR VR_9, [VR_0]
	B .BLOCK_12
.BLOCK_12:
	LDR VR_10, [VR_1]
	LDR VR_11, [VR_0]
	CMP VR_10, VR_11
	BNE .BLOCK_14
	BEQ .BLOCK_13
.BLOCK_13:
	ADD sp, sp, #16
	POP {pc}
.BLOCK_14:
	LDR VR_12, [VR_1]
	MOVW VR_13, :lower16:array
	MOVT VR_13, :upper16:array
	ADD VR_14, VR_13, VR_12, LSL #2
	LDR VR_15, [VR_0]
	STR VR_15, [VR_14]
	B .BLOCK_13


	.global main
main:
.BLOCK_15:
	SUB sp, sp, #36
	ADD VR_0, sp, #0
	ADD VR_1, sp, #4
	ADD VR_2, sp, #8
	ADD VR_3, sp, #12
	ADD VR_4, sp, #16
	ADD VR_5, sp, #20
	ADD VR_6, sp, #24
	ADD VR_7, sp, #28
	ADD VR_8, sp, #32
	MOV VR_9, #1
	STR VR_9, [VR_8]
	B .BLOCK_16
.BLOCK_16:
	LDR VR_10, [VR_8]
	CMP VR_10, #0
	BNE .BLOCK_17
	BEQ .BLOCK_18
.BLOCK_17:
	LDR VR_11, [VR_8]
	SUB VR_12, VR_11, #1
	STR VR_12, [VR_8]
	MOVW VR_13, :lower16:n
	MOVT VR_13, :upper16:n
	MOV VR_14, #4
	STR VR_14, [VR_13]
	MOV VR_15, #10
	STR VR_15, [VR_7]
	MOV VR_16, #0
	STR VR_16, [VR_4]
	MOV VR_17, #0
	STR VR_17, [VR_3]
	MOVW VR_19, :lower16:n
	MOVT VR_19, :upper16:n
	LDR VR_18, [VR_19]
	MOV r0, VR_18
	BL init
	MOVW VR_21, :lower16:n
	MOVT VR_21, :upper16:n
	LDR VR_20, [VR_21]
	MOVW VR_23, :lower16:n
	MOVT VR_23, :upper16:n
	LDR VR_22, [VR_23]
	MUL VR_24, VR_20, VR_22
	ADD VR_25, VR_24, #1
	STR VR_25, [VR_2]
	B .BLOCK_19
.BLOCK_18:
	MOV r0, #0
	ADD sp, sp, #36
	POP {pc}
.BLOCK_19:
	LDR VR_26, [VR_4]
	LDR VR_27, [VR_7]
	CMP VR_26, VR_27
	BLT .BLOCK_20
	BGE .BLOCK_21
.BLOCK_20:
	BL getint
	MOV VR_28, r0
	STR VR_28, [VR_6]
	BL getint
	MOV VR_29, r0
	STR VR_29, [VR_5]
	B .BLOCK_22
.BLOCK_21:
	B .BLOCK_52
.BLOCK_22:
	LDR VR_30, [VR_3]
	CMP VR_30, #0
	BEQ .BLOCK_24
	BNE .BLOCK_23
.BLOCK_23:
	LDR VR_31, [VR_4]
	ADD VR_32, VR_31, #1
	STR VR_32, [VR_4]
	B .BLOCK_19
.BLOCK_24:
	MOVW VR_34, :lower16:n
	MOVT VR_34, :upper16:n
	LDR VR_33, [VR_34]
	LDR VR_35, [VR_6]
	SUB VR_36, VR_35, #1
	MUL VR_37, VR_33, VR_36
	LDR VR_38, [VR_5]
	ADD VR_39, VR_37, VR_38
	STR VR_39, [VR_1]
	LDR VR_40, [VR_1]
	MOVW VR_41, :lower16:array
	MOVT VR_41, :upper16:array
	ADD VR_42, VR_41, VR_40, LSL #2
	LDR VR_43, [VR_1]
	STR VR_43, [VR_42]
	B .BLOCK_25
.BLOCK_25:
	LDR VR_44, [VR_6]
	CMP VR_44, #1
	BEQ .BLOCK_27
	BNE .BLOCK_26
.BLOCK_26:
	B .BLOCK_28
.BLOCK_27:
	MOVW VR_45, :lower16:array
	MOVT VR_45, :upper16:array
	MOV VR_46, VR_45
	MOV VR_47, #0
	STR VR_47, [VR_46]
	LDR VR_48, [VR_1]
	MOV r1, #0
	MOV r0, VR_48
	BL mmerge
	B .BLOCK_26
.BLOCK_28:
	LDR VR_49, [VR_6]
	MOVW VR_51, :lower16:n
	MOVT VR_51, :upper16:n
	LDR VR_50, [VR_51]
	CMP VR_49, VR_50
	BEQ .BLOCK_30
	BNE .BLOCK_29
.BLOCK_29:
	B .BLOCK_31
.BLOCK_30:
	LDR VR_52, [VR_2]
	MOVW VR_53, :lower16:array
	MOVT VR_53, :upper16:array
	ADD VR_54, VR_53, VR_52, LSL #2
	LDR VR_55, [VR_2]
	STR VR_55, [VR_54]
	LDR VR_56, [VR_1]
	LDR VR_57, [VR_2]
	MOV r1, VR_57
	MOV r0, VR_56
	BL mmerge
	B .BLOCK_29
.BLOCK_31:
	LDR VR_58, [VR_5]
	MOVW VR_60, :lower16:n
	MOVT VR_60, :upper16:n
	LDR VR_59, [VR_60]
	CMP VR_58, VR_59
	BLT .BLOCK_34
	BGE .BLOCK_32
.BLOCK_32:
	B .BLOCK_35
.BLOCK_33:
	LDR VR_61, [VR_1]
	LDR VR_62, [VR_1]
	ADD VR_63, VR_62, #1
	MOV r1, VR_63
	MOV r0, VR_61
	BL mmerge
	B .BLOCK_32
.BLOCK_34:
	LDR VR_64, [VR_1]
	ADD VR_65, VR_64, #1
	MOVW VR_66, :lower16:array
	MOVT VR_66, :upper16:array
	ADD VR_67, VR_66, VR_65, LSL #2
	LDR VR_68, [VR_67]
	MOV VR_70, #0
	SUB VR_69, VR_70, #1
	CMP VR_68, VR_69
	BNE .BLOCK_33
	BEQ .BLOCK_32
.BLOCK_35:
	LDR VR_71, [VR_5]
	CMP VR_71, #1
	BGT .BLOCK_38
	BLE .BLOCK_36
.BLOCK_36:
	B .BLOCK_39
.BLOCK_37:
	LDR VR_72, [VR_1]
	LDR VR_73, [VR_1]
	SUB VR_74, VR_73, #1
	MOV r1, VR_74
	MOV r0, VR_72
	BL mmerge
	B .BLOCK_36
.BLOCK_38:
	LDR VR_75, [VR_1]
	SUB VR_76, VR_75, #1
	MOVW VR_77, :lower16:array
	MOVT VR_77, :upper16:array
	ADD VR_78, VR_77, VR_76, LSL #2
	LDR VR_79, [VR_78]
	MOV VR_81, #0
	SUB VR_80, VR_81, #1
	CMP VR_79, VR_80
	BNE .BLOCK_37
	BEQ .BLOCK_36
.BLOCK_39:
	LDR VR_82, [VR_6]
	MOVW VR_84, :lower16:n
	MOVT VR_84, :upper16:n
	LDR VR_83, [VR_84]
	CMP VR_82, VR_83
	BLT .BLOCK_42
	BGE .BLOCK_40
.BLOCK_40:
	B .BLOCK_43
.BLOCK_41:
	LDR VR_85, [VR_1]
	LDR VR_86, [VR_1]
	MOVW VR_88, :lower16:n
	MOVT VR_88, :upper16:n
	LDR VR_87, [VR_88]
	ADD VR_89, VR_86, VR_87
	MOV r1, VR_89
	MOV r0, VR_85
	BL mmerge
	B .BLOCK_40
.BLOCK_42:
	LDR VR_90, [VR_1]
	MOVW VR_92, :lower16:n
	MOVT VR_92, :upper16:n
	LDR VR_91, [VR_92]
	ADD VR_93, VR_90, VR_91
	MOVW VR_94, :lower16:array
	MOVT VR_94, :upper16:array
	ADD VR_95, VR_94, VR_93, LSL #2
	LDR VR_96, [VR_95]
	MOV VR_98, #0
	SUB VR_97, VR_98, #1
	CMP VR_96, VR_97
	BNE .BLOCK_41
	BEQ .BLOCK_40
.BLOCK_43:
	LDR VR_99, [VR_6]
	CMP VR_99, #1
	BGT .BLOCK_46
	BLE .BLOCK_44
.BLOCK_44:
	B .BLOCK_47
.BLOCK_45:
	LDR VR_100, [VR_1]
	LDR VR_101, [VR_1]
	MOVW VR_103, :lower16:n
	MOVT VR_103, :upper16:n
	LDR VR_102, [VR_103]
	SUB VR_104, VR_101, VR_102
	MOV r1, VR_104
	MOV r0, VR_100
	BL mmerge
	B .BLOCK_44
.BLOCK_46:
	LDR VR_105, [VR_1]
	MOVW VR_107, :lower16:n
	MOVT VR_107, :upper16:n
	LDR VR_106, [VR_107]
	SUB VR_108, VR_105, VR_106
	MOVW VR_109, :lower16:array
	MOVT VR_109, :upper16:array
	ADD VR_110, VR_109, VR_108, LSL #2
	LDR VR_111, [VR_110]
	MOV VR_113, #0
	SUB VR_112, VR_113, #1
	CMP VR_111, VR_112
	BNE .BLOCK_45
	BEQ .BLOCK_44
.BLOCK_47:
	MOVW VR_114, :lower16:array
	MOVT VR_114, :upper16:array
	MOV VR_115, VR_114
	LDR VR_116, [VR_115]
	MOV VR_118, #0
	SUB VR_117, VR_118, #1
	CMP VR_116, VR_117
	BNE .BLOCK_50
	BEQ .BLOCK_48
.BLOCK_48:
	B .BLOCK_23
.BLOCK_49:
	MOV VR_119, #1
	STR VR_119, [VR_3]
	LDR VR_120, [VR_4]
	ADD VR_121, VR_120, #1
	STR VR_121, [VR_0]
	LDR VR_122, [VR_0]
	MOV r0, VR_122
	BL putint
	MOV r0, #10
	BL putch
	B .BLOCK_48
.BLOCK_50:
	LDR VR_123, [VR_2]
	MOVW VR_124, :lower16:array
	MOVT VR_124, :upper16:array
	ADD VR_125, VR_124, VR_123, LSL #2
	LDR VR_126, [VR_125]
	MOV VR_128, #0
	SUB VR_127, VR_128, #1
	CMP VR_126, VR_127
	BNE .BLOCK_51
	BEQ .BLOCK_48
.BLOCK_51:
	MOV r0, #0
	BL findfa
	MOV VR_129, r0
	LDR VR_130, [VR_2]
	MOV r0, VR_130
	BL findfa
	MOV VR_131, r0
	CMP VR_129, VR_131
	BEQ .BLOCK_49
	BNE .BLOCK_48
.BLOCK_52:
	LDR VR_132, [VR_3]
	CMP VR_132, #0
	BEQ .BLOCK_54
	BNE .BLOCK_53
.BLOCK_53:
	B .BLOCK_16
.BLOCK_54:
	MOV VR_134, #0
	SUB VR_133, VR_134, #1
	MOV r0, VR_133
	BL putint
	MOV r0, #10
	BL putch
	B .BLOCK_53
.BLOCK_55:
	MOV r0, #0
	ADD sp, sp, #36
	POP {pc}


	.data
	.align 4
	.comm	array, 440, 4
	.global n
n:
	.zero	4


	.end
